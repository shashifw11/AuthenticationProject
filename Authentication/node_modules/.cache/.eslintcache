[{"C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\index.js":"1","C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\App.js":"2","C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\reportWebVitals.js":"3","C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\Components\\card.jsx":"4"},{"size":784,"mtime":1659559879471,"results":"5","hashOfConfig":"6"},{"size":2424,"mtime":1659568786496,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":670,"mtime":1659568465025,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10q283e",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24","usedDeprecatedRules":"25"},"C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\index.js",[],[],"C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\App.js",["26","27","28","29"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {Container , Stack, Flex , List , ListItem , Heading} from \"@chakra-ui/react\" ; \nimport { Card } from './Components/card';\nimport {useState} from \"react\" ; \nimport { useDrop } from 'react-dnd'\n\nfunction App() {\n\n  const [data , setData] = useState([\n       {name : \"book1\"},\n       {name : \"book2\"},\n       {name : \"book3\"},\n       {name : \"book4\"},\n       {name : \"book5\"},\n       {name : \"book6\"}\n  ])\n\n  const [team , setTeam] = useState([]);\n\n  const [{isOver} , addToTeamRef] = useDrop({\n    accept : \"data\" , \n    collect : (monitor)=>({isOver : !!monitor.isOver()}) ,\n  }) ; \n\n  const [{isOver:isCardOver} , removeFromTeamRef] = useDrop({\n    accept : \"team\" , \n    collect : (monitor)=>({isOver : !!monitor.isOver()}),\n  }) ; \n\n  const moveCardToTeam = (item)=>{\n      setData(prev=>prev.filter((_,i)=>i !== item.index)) ; \n      setTeam((prev)=>[...prev,item]);\n  }\n  const removeCardToTeam = (item)=>{\n    console.log(item)\n    setTeam(prev=>prev.filter((_,i)=>i !== item.index)) ; \n      setData((prev)=>[...prev,item]);\n  }\n\n  return (\n   <Container maxW = \"800px\">\n    <Flex justify= \"space-between\" height = \"90vh\" align = \"cenetr\">\n      <Stack width = \"300px\">\n        <Heading fontSize = \"3xl\" color = \"yellow.800\" textAlign = \"center\">\n          List 1\n        </Heading>\n        <List \n        p=\"4\" \n        minH = \"70vh\" \n        boxShadow=\"xl\" \n        borderRadius = \"md\" \n        ref = {removeFromTeamRef}>\n\n        {data.map((item , i)=>{\n           return   <Card \n                      key = {i} \n                      item = {item} \n                      type = \"data\" \n                      index = {i}  \n                      onDropCard = { moveCardToTeam }/>\n        })}\n        </List>\n      </Stack>\n      <Stack width = \"300px\">\n      <Heading fontSize = \"3xl\" color = \"sky\" textAlign = \"center\">\n          List 2\n        </Heading>\n        <List \n        p=\"4\" \n        minH = \"70vh\" \n        boxShadow=\"xl\" \n        borderRadius = \"md\" \n        ref = {addToTeamRef}>\n\n        {team.map((e,i)=>{\n           return   <Card \n                      key = {e.name}\n                      item = {e}\n                      type = \"team\" \n                      index = {i} \n                      onDropCard = { removeCardToTeam }/>\n                 })}\n        </List>\n      </Stack>\n    </Flex>\n   </Container>\n  );\n}\n\nexport default App;\n","C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\91995\\Unit-6_Async\\RM101\\dragdrop\\src\\Components\\card.jsx",["30","31","32"],[],"import {ListItem} from \"@chakra-ui/react\" ; \r\nimport { useDrag } from 'react-dnd'\r\n\r\nexport const Card = ({item,type,index,onDropCard})=>{\r\n\r\n   const  [isDraggble,dragRef] = useDrag({\r\n\r\n    type : type , \r\n    item : ()=>({...item,index}),\r\n    end: (item,monitor)=>{\r\n        const dropResult = monitor.getDropResult();\r\n         if(dropResult && item){\r\n            onDropCard(item)\r\n         }\r\n    },\r\n    collect :(monitor)=>{\r\n        isDragging :monitor.isDragging()\r\n    }, \r\n})\r\n     return (\r\n        <ListItem  ref = {dragRef} p = \"2\" borderRadius = \"md\" boxShadow = \"md\" mb = \"2\" textAlign = \"center\">\r\n          {item.name}\r\n        </ListItem>\r\n     )\r\n}",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":3,"column":42,"nodeType":"35","messageId":"36","endLine":3,"endColumn":50},{"ruleId":"33","severity":1,"message":"38","line":21,"column":11,"nodeType":"35","messageId":"36","endLine":21,"endColumn":17},{"ruleId":"33","severity":1,"message":"39","line":26,"column":18,"nodeType":"35","messageId":"36","endLine":26,"endColumn":28},{"ruleId":"33","severity":1,"message":"40","line":6,"column":12,"nodeType":"35","messageId":"36","endLine":6,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":17,"column":9,"nodeType":"43","messageId":"44","endLine":17,"endColumn":41},{"ruleId":"45","severity":1,"message":"46","line":17,"column":9,"nodeType":"35","messageId":"47","endLine":17,"endColumn":19,"fix":"48"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'isOver' is assigned a value but never used.","'isCardOver' is assigned a value but never used.","'isDraggble' is assigned a value but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'isDragging:' is defined but never used.","unused",{"range":"49","text":"50"},[443,455],""]